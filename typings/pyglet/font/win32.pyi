"""
This type stub file was generated by pyright.
"""

from pyglet.font import base
from pyglet.libs.win32.constants import *
from pyglet.libs.win32.types import *

_debug_font = ...
def str_ucs2(text): # -> Array[c_char]:
    ...

_debug_dir = ...
_debug_logfile = ...
class Win32GlyphRenderer(base.GlyphRenderer):
    def __init__(self, font) -> None:
        ...
    
    def render(self, text):
        ...
    


class GDIGlyphRenderer(Win32GlyphRenderer):
    def __del__(self): # -> None:
        ...
    
    def render(self, text):
        ...
    


class Win32Font(base.Font):
    glyph_renderer_class = GDIGlyphRenderer
    def __init__(self, name, size, bold=..., italic=..., stretch=..., dpi=...) -> None:
        ...
    
    def __del__(self): # -> None:
        ...
    
    @staticmethod
    def get_logfont(name, size, bold, italic, dpi): # -> LOGFONTW:
        ...
    
    @classmethod
    def have_font(cls, name): # -> bool:
        ...
    
    @classmethod
    def add_font_data(cls, data): # -> None:
        ...
    


DriverStringOptionsCmapLookup = ...
DriverStringOptionsRealizedAdvance = ...
TextRenderingHintAntiAlias = ...
TextRenderingHintAntiAliasGridFit = ...
StringFormatFlagsDirectionRightToLeft = ...
StringFormatFlagsDirectionVertical = ...
StringFormatFlagsNoFitBlackBox = ...
StringFormatFlagsDisplayFormatControl = ...
StringFormatFlagsNoFontFallback = ...
StringFormatFlagsMeasureTrailingSpaces = ...
StringFormatFlagsNoWrap = ...
StringFormatFlagsLineLimit = ...
StringFormatFlagsNoClip = ...
class Rectf(ctypes.Structure):
    _fields_ = ...


class GDIPlusGlyphRenderer(Win32GlyphRenderer):
    def __del__(self): # -> None:
        ...
    
    def render(self, text):
        ...
    


FontStyleBold = ...
FontStyleItalic = ...
UnitPixel = ...
UnitPoint = ...
class GDIPlusFont(Win32Font):
    glyph_renderer_class = GDIPlusGlyphRenderer
    _private_fonts = ...
    _default_name = ...
    def __init__(self, name, size, bold=..., italic=..., stretch=..., dpi=...) -> None:
        ...
    
    @property
    def name(self): # -> str | Unknown:
        ...
    
    def __del__(self): # -> None:
        ...
    
    @classmethod
    def add_font_data(cls, data): # -> None:
        ...
    
    @classmethod
    def have_font(cls, name): # -> bool:
        ...
    


