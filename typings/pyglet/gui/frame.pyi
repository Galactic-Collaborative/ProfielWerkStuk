"""
This type stub file was generated by pyright.
"""

class Frame:
    """The base Frame object, implementing a 2D spatial hash.

    A `Frame` provides an efficient way to handle dispatching
    keyboard and mouse events to Widgets. This is done by
    implementing a 2D spatial hash. Only Widgets that are in the
    vicinity of the mouse pointer will be passed Window events,
    which can greatly improve efficiency when a large quantity
    of Widgets are in use.
    """
    def __init__(self, window, cell_size=..., order=...) -> None:
        """Create an instance of a Frame.

        :Parameters:
            `window` : `~pyglet.window.Window`
                The SpatialHash will recieve events from this Window.
                Appropriate events will be passed on to all added Widgets.
            `cell_size` : int
                The cell ("bucket") size for each cell in the hash.
                Widgets may span multiple cells.
            `order` : int
                Widgets use internal OrderedGroups for draw sorting.
                This is the base value for these Groups.
        """
        ...
    
    def add_widget(self, widget): # -> None:
        """Add a Widget to the spatial hash."""
        ...
    
    def remove_widget(self, widget): # -> None:
        """Remove a Widget from the spatial hash."""
        ...
    
    def on_mouse_press(self, x, y, buttons, modifiers): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    
    def on_mouse_release(self, x, y, buttons, modifiers): # -> None:
        """Pass the event to any widgets that are currently active"""
        ...
    
    def on_mouse_drag(self, x, y, dx, dy, buttons, modifiers): # -> None:
        """Pass the event to any widgets that are currently active"""
        ...
    
    def on_mouse_scroll(self, x, y, index, direction): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    
    def on_mouse_motion(self, x, y, dx, dy): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    
    def on_text(self, text): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    
    def on_text_motion(self, motion): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    
    def on_text_motion_select(self, motion): # -> None:
        """Pass the event to any widgets within range of the mouse"""
        ...
    


class MovableFrame(Frame):
    """A Frame that allows Widget repositioning.

    When a specified modifier key is held down, Widgets can be
    repositioned by dragging them. Examples of modifier keys are
    Ctrl, Alt, Shift. These are defined in the `pyglet.window.key`
    module, and start witih `MOD_`. For example::

        from pyglet.window.key import MOD_CTRL

        frame = pyglet.gui.frame.MovableFrame(mywindow, modifier=MOD_CTRL)

    For more information, see the `pyglet.window.key` submodule
    API documentation.
    """
    def __init__(self, window, order=..., modifier=...) -> None:
        ...
    
    def on_mouse_press(self, x, y, buttons, modifiers): # -> None:
        ...
    
    def on_mouse_release(self, x, y, buttons, modifiers): # -> None:
        ...
    
    def on_mouse_drag(self, x, y, dx, dy, buttons, modifiers): # -> None:
        ...
    


