"""
This type stub file was generated by pyright.
"""

from pyglet.input.base import Tablet, TabletCanvas

_debug = ...
lib = ...
def wtinfo(category, index, buffer):
    ...

def wtinfo_string(category, index): # -> Any:
    ...

def wtinfo_uint(category, index): # -> int:
    ...

def wtinfo_word(category, index): # -> int:
    ...

def wtinfo_dword(category, index): # -> int:
    ...

def wtinfo_wtpkt(category, index): # -> int:
    ...

def wtinfo_bool(category, index): # -> bool:
    ...

class WintabTablet(Tablet):
    def __init__(self, index) -> None:
        ...
    
    def open(self, window): # -> WintabTabletCanvas:
        ...
    


class WintabTabletCanvas(TabletCanvas):
    override_keys = ...
    def __init__(self, device, window, msg_base=...) -> None:
        ...
    
    def extension_get(self, extension, tablet_id, control_id, function_id, property_id, value_type=...): # -> int:
        ...
    
    def extension_set(self, extension, tablet_id, control_id, function_id, property_id, value): # -> bool:
        ...
    
    def close(self): # -> None:
        ...
    
    def on_express_key_press(self, control_id: int, location_id: int): # -> None:
        """An event called when an ExpressKey is pressed down.

        :Parameters:
            `control_id` : int
                Zero-based index number given to the assigned key by the driver.
                The same control_id may exist in multiple locations, which the location_id is used to differentiate.
            `location_id: int
                Zero-based index indicating side of tablet where control id was found.
                Some tablets may have clusters of ExpressKey's on various areas of the tablet.
                (0 = left, 1 = right, 2 = top, 3 = bottom, 4 = transducer).

        :event:
        """
        ...
    
    def on_express_key_release(self, control_id: int, location_id: int): # -> None:
        """An event called when an ExpressKey is released.

        :Parameters:
            `control_id` : int
                Zero-based index number given to the assigned key by the driver.
                The same control_id may exist in multiple locations, which the location_id is used to differentiate.
            `location_id: int
                Zero-based index indicating side of tablet where control id was found.
                Some tablets may have clusters of ExpressKey's on various areas of the tablet.
                (0 = left, 1 = right, 2 = top, 3 = bottom, 4 = transducer).

        :event:
        """
        ...
    


class WintabTabletCursor:
    def __init__(self, device, index) -> None:
        ...
    
    def __repr__(self): # -> Any:
        ...
    


def get_spec_version(): # -> int:
    ...

def get_interface_name(): # -> Any:
    ...

def get_implementation_version(): # -> int:
    ...

def extension_index(ext): # -> int | None:
    """Check if a particular extension exists within the driver."""
    ...

def get_extension_masks(): # -> int:
    """Determine which extension support is available by getting the masks."""
    ...

def get_tablet_count(): # -> int:
    """Return just the number of current devices."""
    ...

_extension_masks = ...
def get_tablets(display=...): # -> list[Unknown] | list[WintabTablet]:
    ...

