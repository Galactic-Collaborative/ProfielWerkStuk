"""
This type stub file was generated by pyright.
"""

import pyglet

"""Functions for loading dynamic libraries.

These extend and correct ctypes functions.
"""
_debug_lib = ...
_debug_trace = ...
_is_pyglet_doc_run = ...
if pyglet.options['search_local_libs']:
    script_path = ...
    cwd = ...
    _local_lib_paths = ...
else:
    _local_lib_paths = ...
class _TraceFunction:
    def __init__(self, func) -> None:
        ...
    
    def __str__(self) -> str:
        ...
    
    def __call__(self, *args, **kwargs): # -> Any:
        ...
    
    def __getattr__(self, name): # -> Any:
        ...
    
    def __setattr__(self, name, value): # -> None:
        ...
    


class _TraceLibrary:
    def __init__(self, library) -> None:
        ...
    
    def __getattr__(self, name): # -> _TraceFunction:
        ...
    


if _is_pyglet_doc_run:
    class LibraryMock:
        """Mock library used when generating documentation."""
        def __getattr__(self, name): # -> LibraryMock:
            ...
        
        def __setattr__(self, name, value): # -> None:
            ...
        
        def __call__(self, *args, **kwargs): # -> LibraryMock:
            ...
        
        def __rshift__(self, other): # -> Literal[0]:
            ...
        
    
    
class LibraryLoader:
    platform = ...
    if platform == 'cygwin':
        platform = ...
    def load_library(self, *names, **kwargs):
        """Find and load a library.  
        
        More than one name can be specified, they will be tried in order.
        Platform-specific library names (given as kwargs) are tried first.

        Raises ImportError if library is not found.
        """
        ...
    
    def find_library(self, name): # -> str | None:
        ...
    
    @staticmethod
    def load_framework(name):
        ...
    


class MachOLibraryLoader(LibraryLoader):
    def __init__(self) -> None:
        ...
    
    def find_library(self, path): # -> None:
        """Implements the dylib search as specified in Apple documentation:

        http://developer.apple.com/library/content/documentation/DeveloperTools/Conceptual/DynamicLibraries/100-Articles/DynamicLibraryUsageGuidelines.html

        Before commencing the standard search, the method first checks
        the bundle's ``Frameworks`` directory if the application is running
        within a bundle (OS X .app).
        """
        ...
    
    @staticmethod
    def load_framework(name): # -> _TraceLibrary | CDLL:
        ...
    


class LinuxLibraryLoader(LibraryLoader):
    _ld_so_cache = ...
    _local_libs_cache = ...
    def find_library(self, path): # -> str | None:
        ...
    


if pyglet.compat_platform == 'darwin':
    loader = ...
else:
    loader = ...
    loader = ...
load_library = ...
