"""
This type stub file was generated by pyright.
"""

from ctypes import *
from .cocoatypes import *

lib = ...
if lib is None:
    lib = ...
cf = ...
kCFStringEncodingUTF8 = ...
CFAllocatorRef = c_void_p
CFStringEncoding = c_uint32
def CFSTR(string): # -> None:
    ...

def get_NSString(string):
    """Autoreleased version of CFSTR"""
    ...

def cfstring_to_string(cfstring): # -> str | None:
    ...

kCFNumberSInt8Type = ...
kCFNumberSInt16Type = ...
kCFNumberSInt32Type = ...
kCFNumberSInt64Type = ...
kCFNumberFloat32Type = ...
kCFNumberFloat64Type = ...
kCFNumberCharType = ...
kCFNumberShortType = ...
kCFNumberIntType = ...
kCFNumberLongType = ...
kCFNumberLongLongType = ...
kCFNumberFloatType = ...
kCFNumberDoubleType = ...
kCFNumberCFIndexType = ...
kCFNumberNSIntegerType = ...
kCFNumberCGFloatType = ...
kCFNumberMaxType = ...
def cfnumber_to_number(cfnumber): # -> int | float | None:
    """Convert CFNumber to python int or float."""
    ...

known_cftypes = ...
def cftype_to_value(cftype): # -> str | int | float | None:
    """Convert a CFType into an equivalent python type.
    The convertible CFTypes are taken from the known_cftypes
    dictionary, which may be added to if another library implements
    its own conversion methods."""
    ...

def cfset_to_set(cfset): # -> set[str | int | float | c_void_p | None]:
    """Convert CFSet to python set."""
    ...

def cfarray_to_list(cfarray): # -> list[str | int | float | c_void_p | None]:
    """Convert CFArray to python list."""
    ...

kCFRunLoopDefaultMode = ...
lib = ...
if lib is None:
    lib = ...
appkit = ...
NSDefaultRunLoopMode = ...
NSEventTrackingRunLoopMode = ...
NSApplicationDidHideNotification = ...
NSApplicationDidUnhideNotification = ...
NSAnyEventMask = ...
NSKeyDown = ...
NSKeyUp = ...
NSFlagsChanged = ...
NSApplicationDefined = ...
NSAlphaShiftKeyMask = ...
NSShiftKeyMask = ...
NSControlKeyMask = ...
NSAlternateKeyMask = ...
NSCommandKeyMask = ...
NSNumericPadKeyMask = ...
NSHelpKeyMask = ...
NSFunctionKeyMask = ...
NSInsertFunctionKey = ...
NSDeleteFunctionKey = ...
NSHomeFunctionKey = ...
NSBeginFunctionKey = ...
NSEndFunctionKey = ...
NSPageUpFunctionKey = ...
NSPageDownFunctionKey = ...
NSBorderlessWindowMask = ...
NSTitledWindowMask = ...
NSClosableWindowMask = ...
NSMiniaturizableWindowMask = ...
NSResizableWindowMask = ...
NSUtilityWindowMask = ...
NSBackingStoreRetained = ...
NSBackingStoreNonretained = ...
NSBackingStoreBuffered = ...
NSTrackingMouseEnteredAndExited = ...
NSTrackingMouseMoved = ...
NSTrackingCursorUpdate = ...
NSTrackingActiveInActiveApp = ...
NSOpenGLPFAAllRenderers = ...
NSOpenGLPFADoubleBuffer = ...
NSOpenGLPFAStereo = ...
NSOpenGLPFAAuxBuffers = ...
NSOpenGLPFAColorSize = ...
NSOpenGLPFAAlphaSize = ...
NSOpenGLPFADepthSize = ...
NSOpenGLPFAStencilSize = ...
NSOpenGLPFAAccumSize = ...
NSOpenGLPFAMinimumPolicy = ...
NSOpenGLPFAMaximumPolicy = ...
NSOpenGLPFAOffScreen = ...
NSOpenGLPFAFullScreen = ...
NSOpenGLPFASampleBuffers = ...
NSOpenGLPFASamples = ...
NSOpenGLPFAAuxDepthStencil = ...
NSOpenGLPFAColorFloat = ...
NSOpenGLPFAMultisample = ...
NSOpenGLPFASupersample = ...
NSOpenGLPFASampleAlpha = ...
NSOpenGLPFARendererID = ...
NSOpenGLPFASingleRenderer = ...
NSOpenGLPFANoRecovery = ...
NSOpenGLPFAAccelerated = ...
NSOpenGLPFAClosestPolicy = ...
NSOpenGLPFARobust = ...
NSOpenGLPFABackingStore = ...
NSOpenGLPFAMPSafe = ...
NSOpenGLPFAWindow = ...
NSOpenGLPFAMultiScreen = ...
NSOpenGLPFACompliant = ...
NSOpenGLPFAScreenMask = ...
NSOpenGLPFAPixelBuffer = ...
NSOpenGLPFARemotePixelBuffer = ...
NSOpenGLPFAAllowOfflineRenderers = ...
NSOpenGLPFAAcceleratedCompute = ...
NSOpenGLPFAOpenGLProfile = ...
NSOpenGLPFAVirtualScreenCount = ...
NSOpenGLProfileVersionLegacy = ...
NSOpenGLProfileVersion3_2Core = ...
NSOpenGLProfileVersion4_1Core = ...
NSOpenGLCPSwapInterval = ...
kCGImageAlphaNone = ...
kCGImageAlphaPremultipliedLast = ...
kCGImageAlphaPremultipliedFirst = ...
kCGImageAlphaLast = ...
kCGImageAlphaFirst = ...
kCGImageAlphaNoneSkipLast = ...
kCGImageAlphaNoneSkipFirst = ...
kCGImageAlphaOnly = ...
kCGImageAlphaPremultipliedLast = ...
kCGBitmapAlphaInfoMask = ...
kCGBitmapFloatComponents = ...
kCGBitmapByteOrderMask = ...
kCGBitmapByteOrderDefault = ...
kCGBitmapByteOrder16Little = ...
kCGBitmapByteOrder32Little = ...
kCGBitmapByteOrder16Big = ...
kCGBitmapByteOrder32Big = ...
NSApplicationPresentationDefault = ...
NSApplicationPresentationHideDock = ...
NSApplicationPresentationHideMenuBar = ...
NSApplicationPresentationDisableProcessSwitching = ...
NSApplicationPresentationDisableHideApplication = ...
NSApplicationActivationPolicyRegular = ...
NSApplicationActivationPolicyAccessory = ...
NSApplicationActivationPolicyProhibited = ...
lib = ...
if lib is None:
    lib = ...
quartz = ...
CGDirectDisplayID = c_uint32
CGError = c_int32
CGBitmapInfo = c_uint32
kCGImagePropertyGIFDictionary = ...
kCGImagePropertyGIFDelayTime = ...
kCGRenderingIntentDefault = ...
lib = ...
if lib is None:
    lib = ...
ct = ...
CTFontOrientation = c_uint32
CTFontSymbolicTraits = c_uint32
kCTFontAttributeName = ...
kCTFontFamilyNameAttribute = ...
kCTFontSymbolicTrait = ...
kCTFontWeightTrait = ...
kCTFontTraitsAttribute = ...
kCTFontItalicTrait = ...
kCTFontBoldTrait = ...
lib = ...
if lib is None:
    lib = ...
foundation = ...
