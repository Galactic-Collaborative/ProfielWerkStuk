"""
This type stub file was generated by pyright.
"""

from pyglet.libs.win32 import com
from pyglet.libs.win32.types import *
from pyglet.media.devices import base

_debug = ...
EDataFlow = UINT
eRender = ...
eCapture = ...
eAll = ...
EDataFlow_enum_count = ...
ERole = UINT
eConsole = ...
eMultimedia = ...
eCommunications = ...
ERole_enum_count = ...
DEVICE_STATE_ACTIVE = ...
DEVICE_STATE_DISABLED = ...
DEVICE_STATE_NOTPRESENT = ...
DEVICE_STATE_UNPLUGGED = ...
DEVICE_STATEMASK_ALL = ...
STGM_READ = ...
STGM_WRITE = ...
STGM_READWRITE = ...
VT_LPWSTR = ...
class PROPERTYKEY(ctypes.Structure):
    _fields_ = ...
    def __repr__(self): # -> str:
        ...
    


REFPROPERTYKEY = PROPERTYKEY
PKEY_Device_FriendlyName = ...
PKEY_Device_DeviceDesc = ...
PKEY_DeviceInterface_FriendlyName = ...
class IPropertyStore(com.pIUnknown):
    _methods_ = ...


CLSID_MMDeviceEnumerator = ...
IID_IMMDeviceEnumerator = ...
class IMMNotificationClient(com.IUnknown):
    _methods_ = ...


class AudioNotificationCB(com.COMObject):
    _interfaces_ = ...
    def __init__(self, audio_devices) -> None:
        ...
    
    def OnDeviceStateChanged(self, this, pwstrDeviceId, dwNewState): # -> None:
        ...
    
    def OnDeviceAdded(self, this, pwstrDeviceId): # -> None:
        ...
    
    def OnDeviceRemoved(self, this, pwstrDeviceId): # -> None:
        ...
    
    def OnDefaultDeviceChanged(self, this, flow, role, pwstrDeviceId): # -> None:
        ...
    
    def OnPropertyValueChanged(self, this, pwstrDeviceId, key): # -> None:
        ...
    


class IMMDevice(com.pIUnknown):
    _methods_ = ...


class IMMDeviceCollection(com.pIUnknown):
    _methods_ = ...


class IMMDeviceEnumerator(com.pIUnknown):
    _methods_ = ...


class Win32AudioDevice(base.AudioDevice):
    _platform_state = ...
    _platform_flow = ...


class Win32AudioDeviceManager(base.AbstractAudioDeviceManager):
    def __init__(self) -> None:
        ...
    
    def get_default_output(self): # -> None:
        """Attempts to retrieve a default audio output for the system. Returns None if no available devices found."""
        ...
    
    def get_default_input(self): # -> None:
        """Attempts to retrieve a default audio input for the system. Returns None if no available devices found."""
        ...
    
    def get_cached_device(self, dev_id):
        """Gets the cached devices, so we can reduce calls to COM and tell current state vs new states."""
        ...
    
    def get_output_devices(self, state=...): # -> list[Unknown]:
        ...
    
    def get_input_devices(self, state=...): # -> list[Unknown]:
        ...
    
    def get_all_devices(self): # -> list[Unknown]:
        ...
    
    def get_device_info(self, device): # -> tuple[str | None, Any | Literal['Unknown'], Any | Literal['Unknown'], int]:
        """Return the ID, Name, and Description of the Audio Device."""
        ...
    
    def get_devices(self, flow=..., state=...): # -> list[Unknown]:
        """Get's all of the specified devices (by default, all output and active)."""
        ...
    
    @staticmethod
    def get_pkey_value(store, pkey): # -> Any | Literal['Unknown']:
        ...
    


