"""
This type stub file was generated by pyright.
"""

import ctypes
from ctypes import *

"""Wrapper for openal

Generated with:
../tools/wraptypes/wrap.py /usr/include/AL/alc.h -lopenal -olib_alc.py

.. Hacked to fix ALCvoid argtypes.
"""
_lib = ...
_int_types = ...
if hasattr(ctypes, 'c_int64'):
    ...
class c_void(Structure):
    _fields_ = ...


ALC_API = ...
ALCAPI = ...
ALC_INVALID = ...
ALC_VERSION_0_1 = ...
class struct_ALCdevice_struct(Structure):
    __slots__ = ...


class struct_ALCdevice_struct(Structure):
    __slots__ = ...


ALCdevice = struct_ALCdevice_struct
class struct_ALCcontext_struct(Structure):
    __slots__ = ...


class struct_ALCcontext_struct(Structure):
    __slots__ = ...


ALCcontext = struct_ALCcontext_struct
ALCboolean = c_char
ALCchar = c_char
ALCbyte = c_char
ALCubyte = c_ubyte
ALCshort = c_short
ALCushort = c_ushort
ALCint = c_int
ALCuint = c_uint
ALCsizei = c_int
ALCenum = c_int
ALCfloat = c_float
ALCdouble = c_double
ALCvoid = ...
ALC_FALSE = ...
ALC_TRUE = ...
ALC_FREQUENCY = ...
ALC_REFRESH = ...
ALC_SYNC = ...
ALC_MONO_SOURCES = ...
ALC_STEREO_SOURCES = ...
ALC_NO_ERROR = ...
ALC_INVALID_DEVICE = ...
ALC_INVALID_CONTEXT = ...
ALC_INVALID_ENUM = ...
ALC_INVALID_VALUE = ...
ALC_OUT_OF_MEMORY = ...
ALC_DEFAULT_DEVICE_SPECIFIER = ...
ALC_DEVICE_SPECIFIER = ...
ALC_EXTENSIONS = ...
ALC_MAJOR_VERSION = ...
ALC_MINOR_VERSION = ...
ALC_ATTRIBUTES_SIZE = ...
ALC_ALL_ATTRIBUTES = ...
ALC_CAPTURE_DEVICE_SPECIFIER = ...
ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER = ...
ALC_CAPTURE_SAMPLES = ...
alcCreateContext = ...
alcMakeContextCurrent = ...
alcProcessContext = ...
alcSuspendContext = ...
alcDestroyContext = ...
alcGetCurrentContext = ...
alcGetContextsDevice = ...
alcOpenDevice = ...
alcCloseDevice = ...
alcGetError = ...
alcIsExtensionPresent = ...
alcGetProcAddress = ...
alcGetEnumValue = ...
alcGetString = ...
alcGetIntegerv = ...
alcCaptureOpenDevice = ...
alcCaptureCloseDevice = ...
alcCaptureStart = ...
alcCaptureStop = ...
alcCaptureSamples = ...
LPALCCREATECONTEXT = ...
LPALCMAKECONTEXTCURRENT = ...
LPALCPROCESSCONTEXT = ...
LPALCSUSPENDCONTEXT = ...
LPALCDESTROYCONTEXT = ...
LPALCGETCURRENTCONTEXT = ...
LPALCGETCONTEXTSDEVICE = ...
LPALCOPENDEVICE = ...
LPALCCLOSEDEVICE = ...
LPALCGETERROR = ...
LPALCISEXTENSIONPRESENT = ...
LPALCGETPROCADDRESS = ...
LPALCGETENUMVALUE = ...
LPALCGETSTRING = ...
LPALCGETINTEGERV = ...
LPALCCAPTUREOPENDEVICE = ...
LPALCCAPTURECLOSEDEVICE = ...
LPALCCAPTURESTART = ...
LPALCCAPTURESTOP = ...
LPALCCAPTURESAMPLES = ...
__all__ = ['ALC_API', 'ALCAPI', 'ALC_INVALID', 'ALC_VERSION_0_1', 'ALCdevice', 'ALCcontext', 'ALCboolean', 'ALCchar', 'ALCbyte', 'ALCubyte', 'ALCshort', 'ALCushort', 'ALCint', 'ALCuint', 'ALCsizei', 'ALCenum', 'ALCfloat', 'ALCdouble', 'ALCvoid', 'ALC_FALSE', 'ALC_TRUE', 'ALC_FREQUENCY', 'ALC_REFRESH', 'ALC_SYNC', 'ALC_MONO_SOURCES', 'ALC_STEREO_SOURCES', 'ALC_NO_ERROR', 'ALC_INVALID_DEVICE', 'ALC_INVALID_CONTEXT', 'ALC_INVALID_ENUM', 'ALC_INVALID_VALUE', 'ALC_OUT_OF_MEMORY', 'ALC_DEFAULT_DEVICE_SPECIFIER', 'ALC_DEVICE_SPECIFIER', 'ALC_EXTENSIONS', 'ALC_MAJOR_VERSION', 'ALC_MINOR_VERSION', 'ALC_ATTRIBUTES_SIZE', 'ALC_ALL_ATTRIBUTES', 'ALC_CAPTURE_DEVICE_SPECIFIER', 'ALC_CAPTURE_DEFAULT_DEVICE_SPECIFIER', 'ALC_CAPTURE_SAMPLES', 'alcCreateContext', 'alcMakeContextCurrent', 'alcProcessContext', 'alcSuspendContext', 'alcDestroyContext', 'alcGetCurrentContext', 'alcGetContextsDevice', 'alcOpenDevice', 'alcCloseDevice', 'alcGetError', 'alcIsExtensionPresent', 'alcGetProcAddress', 'alcGetEnumValue', 'alcGetString', 'alcGetIntegerv', 'alcCaptureOpenDevice', 'alcCaptureCloseDevice', 'alcCaptureStart', 'alcCaptureStop', 'alcCaptureSamples', 'LPALCCREATECONTEXT', 'LPALCMAKECONTEXTCURRENT', 'LPALCPROCESSCONTEXT', 'LPALCSUSPENDCONTEXT', 'LPALCDESTROYCONTEXT', 'LPALCGETCURRENTCONTEXT', 'LPALCGETCONTEXTSDEVICE', 'LPALCOPENDEVICE', 'LPALCCLOSEDEVICE', 'LPALCGETERROR', 'LPALCISEXTENSIONPRESENT', 'LPALCGETPROCADDRESS', 'LPALCGETENUMVALUE', 'LPALCGETSTRING', 'LPALCGETINTEGERV', 'LPALCCAPTUREOPENDEVICE', 'LPALCCAPTURECLOSEDEVICE', 'LPALCCAPTURESTART', 'LPALCCAPTURESTOP', 'LPALCCAPTURESAMPLES']
