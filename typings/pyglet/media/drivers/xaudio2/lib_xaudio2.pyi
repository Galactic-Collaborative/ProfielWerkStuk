"""
This type stub file was generated by pyright.
"""

import ctypes
from pyglet.libs.win32.constants import *
from pyglet.libs.win32.types import *
from pyglet.libs.win32 import com

_debug = ...
def load_xaudio2(dll_name): # -> tuple[WinDLL, CDLL]:
    """This will attempt to load a version of XAudio2. Versions supported: 2.9, 2.8.
       While Windows 8 ships with 2.8 and Windows 10 ships with version 2.9, it is possible to install 2.9 on 8/8.1.
    """
    ...

UINT32 = c_uint32
FLOAT32 = c_float
class XAUDIO2_DEBUG_CONFIGURATION(ctypes.Structure):
    _fields_ = ...


class XAUDIO2_PERFORMANCE_DATA(ctypes.Structure):
    _fields_ = ...
    def __repr__(self): # -> str:
        ...
    


class XAUDIO2_VOICE_SENDS(ctypes.Structure):
    _fields_ = ...


class XAUDIO2_BUFFER(ctypes.Structure):
    _fields_ = ...


class XAUDIO2_VOICE_STATE(ctypes.Structure):
    _fields_ = ...
    def __repr__(self): # -> str:
        ...
    


class WAVEFORMATEX(ctypes.Structure):
    _fields_ = ...
    def __repr__(self): # -> str:
        ...
    


XAUDIO2_USE_DEFAULT_PROCESSOR = ...
if WINDOWS_10_ANNIVERSARY_UPDATE_OR_GREATER:
    XAUDIO2_DEFAULT_PROCESSOR = ...
else:
    XAUDIO2_DEFAULT_PROCESSOR = ...
XAUDIO2_LOG_ERRORS = ...
XAUDIO2_LOG_WARNINGS = ...
XAUDIO2_LOG_INFO = ...
XAUDIO2_LOG_DETAIL = ...
XAUDIO2_LOG_API_CALLS = ...
XAUDIO2_LOG_FUNC_CALLS = ...
XAUDIO2_LOG_TIMING = ...
XAUDIO2_LOG_LOCKS = ...
XAUDIO2_LOG_MEMORY = ...
XAUDIO2_LOG_STREAMING = ...
XAUDIO2_MAX_BUFFER_BYTES = ...
XAUDIO2_MAX_QUEUED_BUFFERS = ...
XAUDIO2_MAX_BUFFERS_SYSTEM = ...
XAUDIO2_MAX_AUDIO_CHANNELS = ...
XAUDIO2_MIN_SAMPLE_RATE = ...
XAUDIO2_MAX_SAMPLE_RATE = ...
XAUDIO2_MAX_VOLUME_LEVEL = ...
XAUDIO2_MIN_FREQ_RATIO = ...
XAUDIO2_MAX_FREQ_RATIO = ...
XAUDIO2_DEFAULT_FREQ_RATIO = ...
XAUDIO2_MAX_FILTER_ONEOVERQ = ...
XAUDIO2_MAX_FILTER_FREQUENCY = ...
XAUDIO2_MAX_LOOP_COUNT = ...
XAUDIO2_MAX_INSTANCES = ...
XAUDIO2_FILTER_TYPE = UINT
LowPassFilter = ...
BandPassFilter = ...
HighPassFilter = ...
NotchFilter = ...
LowPassOnePoleFilter = ...
HighPassOnePoleFilter = ...
XAUDIO2_NO_LOOP_REGION = ...
XAUDIO2_LOOP_INFINITE = ...
XAUDIO2_DEFAULT_CHANNELS = ...
XAUDIO2_DEFAULT_SAMPLERATE = ...
WAVE_FORMAT_PCM = ...
XAUDIO2_DEBUG_ENGINE = ...
XAUDIO2_VOICE_NOPITCH = ...
XAUDIO2_VOICE_NOSRC = ...
XAUDIO2_VOICE_USEFILTER = ...
XAUDIO2_PLAY_TAILS = ...
XAUDIO2_END_OF_STREAM = ...
XAUDIO2_SEND_USEFILTER = ...
XAUDIO2_VOICE_NOSAMPLESPLAYED = ...
XAUDIO2_STOP_ENGINE_WHEN_IDLE = ...
XAUDIO2_1024_QUANTUM = ...
XAUDIO2_NO_VIRTUAL_AUDIO_CLIENT = ...
class IXAudio2VoiceCallback(com.Interface):
    _methods_ = ...


class XA2SourceCallback(com.COMObject):
    """Callback class used to trigger when buffers or streams end..
           WARNING: Whenever a callback is running, XAudio2 cannot generate audio.
           Make sure these functions run as fast as possible and do not block/delay more than a few milliseconds.
           MS Recommendation:
           At a minimum, callback functions must not do the following:
                - Access the hard disk or other permanent storage
                - Make expensive or blocking API calls
                - Synchronize with other parts of client code
                - Require significant CPU usage
    """
    _interfaces_ = ...
    def __init__(self, xa2_player) -> None:
        ...
    
    def OnVoiceProcessingPassStart(self, bytesRequired): # -> None:
        ...
    
    def OnVoiceProcessingPassEnd(self): # -> None:
        ...
    
    def onStreamEnd(self): # -> None:
        ...
    
    def onBufferStart(self, pBufferContext): # -> None:
        ...
    
    def OnBufferEnd(self, pBufferContext): # -> None:
        """At the end of playing one buffer, attempt to refill again.
        Even if the player is out of sources, it needs to be called to purge all buffers.
        """
        ...
    
    def OnLoopEnd(self, this, pBufferContext): # -> None:
        ...
    
    def onVoiceError(self, this, pBufferContext, hresult):
        ...
    


class XAUDIO2_EFFECT_DESCRIPTOR(Structure):
    _fields_ = ...


class XAUDIO2_EFFECT_CHAIN(ctypes.Structure):
    _fields_ = ...


class XAUDIO2_FILTER_PARAMETERS(Structure):
    _fields_ = ...


class XAUDIO2_VOICE_DETAILS(Structure):
    _fields_ = ...


class IXAudio2Voice(com.pInterface):
    _methods_ = ...


class IXAudio2SubmixVoice(IXAudio2Voice):
    ...


class IXAudio2SourceVoice(IXAudio2Voice):
    _methods_ = ...


class IXAudio2MasteringVoice(IXAudio2Voice):
    _methods_ = ...


class IXAudio2EngineCallback(com.Interface):
    _methods_ = ...


class XA2EngineCallback(com.COMObject):
    _interfaces_ = ...
    def OnProcessingPassStart(self): # -> None:
        ...
    
    def OnProcessingPassEnd(self): # -> None:
        ...
    
    def OnCriticalError(self, this, hresult):
        ...
    


class X3DAUDIO_DISTANCE_CURVE_POINT(ctypes.Structure):
    _fields_ = ...


class X3DAUDIO_DISTANCE_CURVE(ctypes.Structure):
    _fields_ = ...


class X3DAUDIO_VECTOR(ctypes.Structure):
    _fields_ = ...


class X3DAUDIO_CONE(Structure):
    _fields_ = ...


class X3DAUDIO_LISTENER(Structure):
    _fields_ = ...


class X3DAUDIO_EMITTER(Structure):
    _fields_ = ...


class X3DAUDIO_DSP_SETTINGS(Structure):
    _fields_ = ...


SPEAKER_FRONT_LEFT = ...
SPEAKER_FRONT_RIGHT = ...
SPEAKER_FRONT_CENTER = ...
SPEAKER_LOW_FREQUENCY = ...
SPEAKER_BACK_LEFT = ...
SPEAKER_BACK_RIGHT = ...
SPEAKER_FRONT_LEFT_OF_CENTER = ...
SPEAKER_FRONT_RIGHT_OF_CENTER = ...
SPEAKER_BACK_CENTER = ...
SPEAKER_SIDE_LEFT = ...
SPEAKER_SIDE_RIGHT = ...
SPEAKER_TOP_CENTER = ...
SPEAKER_TOP_FRONT_LEFT = ...
SPEAKER_TOP_FRONT_CENTER = ...
SPEAKER_TOP_FRONT_RIGHT = ...
SPEAKER_TOP_BACK_LEFT = ...
SPEAKER_TOP_BACK_CENTER = ...
SPEAKER_TOP_BACK_RIGHT = ...
SPEAKER_RESERVED = ...
SPEAKER_ALL = ...
SPEAKER_MONO = ...
SPEAKER_STEREO = ...
SPEAKER_2POINT1 = ...
SPEAKER_SURROUND = ...
SPEAKER_QUAD = ...
SPEAKER_4POINT1 = ...
SPEAKER_5POINT1 = ...
SPEAKER_7POINT1 = ...
SPEAKER_5POINT1_SURROUND = ...
SPEAKER_7POINT1_SURROUND = ...
DBL_DECIMAL_DIG = ...
DBL_DIG = ...
DBL_EPSILON = ...
DBL_HAS_SUBNORM = ...
DBL_MANT_DIG = ...
DBL_MAX = ...
DBL_MAX_10_EXP = ...
DBL_MAX_EXP = ...
DBL_MIN = ...
DBL_MIN_10_EXP = ...
DBL_MIN_EXP = ...
_DBL_RADIX = ...
DBL_TRUE_MIN = ...
FLT_DECIMAL_DIG = ...
FLT_DIG = ...
FLT_EPSILON = ...
FLT_HAS_SUBNORM = ...
FLT_GUARD = ...
FLT_MANT_DIG = ...
FLT_MAX = ...
FLT_MAX_10_EXP = ...
FLT_MAX_EXP = ...
FLT_MIN = ...
FLT_MIN_10_EXP = ...
FLT_MIN_EXP = ...
FLT_NORMALIZE = ...
FLT_RADIX = ...
FLT_TRUE_MIN = ...
LDBL_DIG = ...
LDBL_EPSILON = ...
LDBL_HAS_SUBNORM = ...
LDBL_MANT_DIG = ...
LDBL_MAX = ...
LDBL_MAX_10_EXP = ...
LDBL_MAX_EXP = ...
LDBL_MIN = ...
LDBL_MIN_10_EXP = ...
LDBL_MIN_EXP = ...
_LDBL_RADIX = ...
LDBL_TRUE_MIN = ...
DECIMAL_DIG = ...
X3DAUDIO_HANDLE_BYTESIZE = ...
X3DAUDIO_HANDLE = (BYTE * X3DAUDIO_HANDLE_BYTESIZE)
X3DAUDIO_SPEED_OF_SOUND = ...
X3DAUDIO_CALCULATE_MATRIX = ...
X3DAUDIO_CALCULATE_DELAY = ...
X3DAUDIO_CALCULATE_LPF_DIRECT = ...
X3DAUDIO_CALCULATE_LPF_REVERB = ...
X3DAUDIO_CALCULATE_REVERB = ...
X3DAUDIO_CALCULATE_DOPPLER = ...
X3DAUDIO_CALCULATE_EMITTER_ANGLE = ...
X3DAUDIO_CALCULATE_ZEROCENTER = ...
X3DAUDIO_CALCULATE_REDIRECT_TO_LFE = ...
default_dsp_calculation = ...
X3DAudioInitialize = ...
X3DAudioCalculate = ...
AudioCategory_Other = ...
AudioCategory_ForegroundOnlyMedia = ...
AudioCategory_Communications = ...
AudioCategory_Alerts = ...
AudioCategory_SoundEffects = ...
AudioCategory_GameEffects = ...
AudioCategory_GameMedia = ...
AudioCategory_GameChat = ...
AudioCategory_Speech = ...
AudioCategory_Movie = ...
AudioCategory_Media = ...
class XAUDIO2FX_REVERB_PARAMETERS(Structure):
    _fields_ = ...


class IXAudio2(com.pIUnknown):
    _methods_ = ...


XAudio2Create = ...
CreateAudioReverb = ...
