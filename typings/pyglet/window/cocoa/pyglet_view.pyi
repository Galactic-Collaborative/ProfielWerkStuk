"""
This type stub file was generated by pyright.
"""

from pyglet.libs.darwin import cocoapy

NSTrackingArea = ...
def getMouseDelta(nsevent): # -> tuple[Unknown, Unknown]:
    ...

def getMousePosition(self, nsevent): # -> tuple[int, int]:
    ...

def getModifiers(nsevent): # -> int:
    ...

def getSymbol(nsevent): # -> int | None:
    ...

class PygletView_Implementation:
    PygletView = ...
    @PygletView.method(b'@' + cocoapy.NSRectEncoding + cocoapy.PyObjectEncoding)
    def initWithFrame_cocoaWindow_(self, frame, window): # -> None:
        ...
    
    @PygletView.method('v')
    def dealloc(self): # -> None:
        ...
    
    @PygletView.method('v')
    def updateTrackingAreas(self): # -> None:
        ...
    
    @PygletView.method('B')
    def canBecomeKeyView(self): # -> Literal[True]:
        ...
    
    @PygletView.method('B')
    def isOpaque(self): # -> Literal[True]:
        ...
    
    @PygletView.method(b'v' + cocoapy.NSSizeEncoding)
    def setFrameSize_(self, size): # -> None:
        ...
    
    @PygletView.method('v@')
    def pygletKeyDown_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def pygletKeyUp_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def pygletFlagsChanged_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('B@')
    def performKeyEquivalent_(self, nsevent): # -> bool:
        ...
    
    @PygletView.method('v@')
    def mouseMoved_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def scrollWheel_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def mouseDown_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def mouseDragged_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def mouseUp_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def rightMouseDown_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def rightMouseDragged_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def rightMouseUp_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def otherMouseDown_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def otherMouseDragged_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def otherMouseUp_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def mouseEntered_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def mouseExited_(self, nsevent): # -> None:
        ...
    
    @PygletView.method('v@')
    def cursorUpdate_(self, nsevent): # -> None:
        ...
    


PygletView = ...
